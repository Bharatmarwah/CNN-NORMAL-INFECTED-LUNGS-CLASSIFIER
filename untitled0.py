# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1zXNFV_cmBrWSy2amQFC2rZzm_KWlQAqz
"""

!mkdir -p~/.kaggle
!cp kaggle.json ~/ .kaggle/

!kaggle datasets download -d khoongweihao/covid19-xray-dataset-train-test-sets

import zipfile
zip_ref = zipfile.ZipFile('/content/covid19-xray-dataset-train-test-sets.zip' , 'r')
zip_ref.extractall('/content')
zip_ref.close()

import tensorflow as tf
from tensorflow import keras

from keras import Sequential
from keras.layers import Dense,Conv2D,MaxPooling2D,Dropout,Flatten

#generators

train_ds =keras.utils.image_dataset_from_directory(
    directory = '/content/xray_dataset_covid19/train',
    labels='inferred',
    label_mode='int',
    batch_size=32,
    image_size=(256,256)
)
validation_ds =keras.utils.image_dataset_from_directory(
    directory = '/content/xray_dataset_covid19/test',
    labels='inferred',
    label_mode='int',
    batch_size=32,
    image_size=(256,256)
)

#normalization

def process(image,label):
  image = tf.cast(image/255 ,tf.float32)
  return image,label


train_ds= train_ds.map(process)
validation_ds=validation_ds.map(process)

#cnn model

model= Sequential()


model.add(Conv2D(32,kernel_size=(3,3),padding='valid',activation='relu',input_shape=(256,256,3)))
model.add(MaxPooling2D(pool_size=(2,2),strides=2,padding='valid'))

model.add(Conv2D(64,kernel_size=(3,3),padding='valid',activation='relu'))
model.add(MaxPooling2D(pool_size=(2,2),strides=2,padding='valid'))

model.add(Conv2D(128,kernel_size=(3,3),padding='valid',activation='relu'))
model.add(MaxPooling2D(pool_size=(2,2),strides=2,padding='valid'))

model.add(Flatten())

model.add(Dense(128,activation='relu'))
model.add(Dropout(0.1))
model.add(Dense(64,activation='relu'))
model.add(Dropout(0.1))
model.add(Dense(1,activation='sigmoid'))

model.compile(optimizer='adam',loss='binary_crossentropy',metrics=['accuracy'])

history = model.fit(train_ds,epochs=10,validation_data=validation_ds)

import matplotlib.pyplot as plt
plt.plot(history.history['accuracy'],color='red',label='train')
plt.plot(history.history['val_accuracy'],color='blue',label='valditaion')
plt.legend()
plt.show()


import matplotlib.pyplot as plt
plt.plot(history.history['loss'],color='red',label='train')
plt.plot(history.history['val_loss'],color='blue',label='valditaion')
plt.legend()
plt.show()

import cv2

test_img=cv2.imread('/content/pnemonia xray2.jpeg')
plt.imshow(test_img)

test_img.shape
(224, 225, 3)
test_img=cv2.resize(test_img,(256,256,))

test_input=test_img.reshape(1,256,256,3)

model.predict(test_input)